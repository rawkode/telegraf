# Telegraf Configuration
#
# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.
#
# Plugins must be declared in here to be active. To deactivate a plugin,
# comment out the name and any variables.
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply
# prepend them with $. For strings the variable must be within quotes as
# "$STR_VAR", for numbers and booleans it should be plain: $INT_VAR, $BOOL_VAR.


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                            GLOBAL CONFIGURATION                             #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #


# Global tags can be specified here in key="value" format.
[global_tags]
  machine_id = "$TELEGRAF_MACHINE"


# Configuration for telegraf agent
[agent]

  # Default data collection interval for all inputs.
  interval = "5s"

  # Rounds collection interval to 'interval'.
  # If interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = false

  # Telegraf will send metrics to outputs in batches of at most
  # metric_batch_size metrics. This controls the size of writes
  # that Telegraf sends to output plugins.
  metric_batch_size = 1000

  # For failed writes, telegraf will cache metric_buffer_limit metrics for each
  # output, and will flush this buffer on a successful write. Oldest metrics
  # are dropped first when this buffer fills. This buffer only fills when
  # writes fail to output plugin(s).
  metric_buffer_limit = 10000

  # Collection jitter is used to jitter the collection by a random amount.
  # Each plugin will sleep for a random time within jitter before collecting.
  # This can be used to avoid many plugins querying things like sysfs at the
  # same time, which can have a measurable effect on the system.
  collection_jitter = "0s"

  # Default flushing interval for all outputs. You shouldn't set this below
  # interval. Maximum flush_interval will be flush_interval + flush_jitter.
  flush_interval = "5s"

  # Jitter the flush interval by a random amount. This is primarily to avoid
  # large write spikes for users running a large number of telegraf instances,
  # ie., jitter of 5s and interval 10s means flushes will happen every 10-15s.
  flush_jitter = "0s"

  # By default, precision will be set to the same timestamp order as the
  # collection interval, with the maximum being 1s.
  # Precision will NOT be used for service inputs, such as logparser and
  # statsd.
  # Valid values are "ns", "us" (or "Âµs"), "ms", "s".
  precision = "s"

  # Logging configuration:
  # Specify the log file name. The empty string means to log to stderr.
  logfile = ""

  # Run telegraf with debug log messages.
  debug = false

  # Run telegraf in quiet mode (error log messages only).
  quiet = false

  # Override default hostname, if empty use os.Hostname().
  hostname = ""

  # If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                               INPUT PLUGINS                                 #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #


# Read metrics about system load & uptime.
[[inputs.system]]


# Read metrics about CPU usage.
[[inputs.cpu]]
  # Options:
  #   percpu: Whether to report per-CPU stats or not.
  #   totalcpu: Whether to report total system CPU stats or not.
  #   collect_cpu_time: Whether to collect raw CPU time metrics.
  percpu = true
  totalcpu = true
  collect_cpu_time = true


# Read metrics about disk usage by mount point.
[[inputs.disk]]
  # By default, telegraf gather stats for all mountpoints.
  # Setting mountpoints will restrict the stats to the specified mountpoints.
  #mount_points = ["/"]

  # Ignore some mountpoints by filesystem type. For example (dev)tmpfs
  # (usually present on /run, /var/run, /dev/shm or /dev).
  ignore_fs = ["tmpfs", "devtmpfs"]


# Read metrics about disk IO by device.
[[inputs.diskio]]
  # By default, telegraf will gather stats for all devices including
  # disk partitions.
  # Setting devices will restrict the stats to the specified devices.
  #devices = ["sda"]

  # NOTE: tagpass and tagdrop parameters must be defined at the end of the
  # plugin definition, otherwise subsequent plugin config options will be
  # interpreted as part of the tagpass/tagdrop map.

  # Drop stats for LVM partitions and loop devices.
  [inputs.diskio.tagdrop]
    name = ["dm*", "loop*"]


# Read metrics about network interface usage.
[[inputs.net]]
   # By default, telegraf gathers stats from any up interface (excluding
   # loopback). Setting interfaces will tell it to gather these explicit
   # interfaces, regardless of status.
   interfaces = ["eth*", "vnet0", "virbr0", "docker0"]


# Read metrics about memory usage.
[[inputs.mem]]


# Read metrics about swap memory usage.
[[inputs.swap]]


# Get kernel statistics from /proc/stat.
[[inputs.kernel]]


# Get the number of processes and group them by status.
[[inputs.processes]]


# Executes the commands on every interval and parses metrics from their output.
[[inputs.exec]]
  # Commands array. Glob patterns are matched on every interval, so adding new
  # scripts that match the pattern will cause them to be picked up immediately.
  commands = ["/opt/cmp/cmp-telegraf/custom/*"]

  # Timeout for each command to complete.
  timeout = "5s"

  # Measurement name suffix (for separating different commands),
  name_suffix = ""

  # Data format to consume. Each data format has its own unique set of
  # configuration settings.
  data_format = "influx"


# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#                               OUTPUT PLUGINS                                #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #


[[outputs.influxdb]]
  # The HTTP or UDP URL for your InfluxDB instance.
  # Each item should be of the form: scheme "://" host [ ":" port]
  #
  # Multiple URLs can be specified as part of the same cluster.
  # Only ONE of the URLs will be written to each interval.
  urls = ["$TELEGRAF_HOST"]
  # The target database for metrics (telegraf will create it if not exists).
  database = "$TELEGRAF_DB"

  # Retention policy to write to. Empty string writes to the default RP.
  retention_policy = ""
  # Write consistency (clusters only), can be: "any", "one", "quorum", "all".
  write_consistency = "any"

  # Write timeout (for the InfluxDB client), formatted as a string.
  # If not provided, will default to 5s. 0s means no timeout (not recommended).
  timeout = "3s"

  username = "client"
  password = "$TELEGRAF_PASSWORD"

  # Set the user agent for HTTP POSTs (can be useful for log differentiation).
  user_agent = "telegraf-$TELEGRAF_MACHINE"

  # Optional SSL settings.
  #ssl_ca = "/etc/telegraf/ca.pem"
  #ssl_key = "/etc/telegraf/key.pem"
  #ssl_cert = "/etc/telegraf/cert.pem"
  #insecure_skip_verify = false
