# Telegraf Configuration
#
# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.
#
# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply prepend
# them with $. For strings the variable must be within quotes (ie, "$STR_VAR"),
# for numbers and booleans they should be plain (ie, $INT_VAR, $BOOL_VAR)


# Global tags can be specified here in key="value" format.
[global_tags]
  # dc = "us-east-1" # will tag all metrics with dc=us-east-1
  # rack = "1a"
  ## Environment variables can be used as tags, and throughout the config file
  # user = "$USER"


# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "60s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf will send metrics to outputs in batches of at most
  ## metric_batch_size metrics.
  ## This controls the size of writes that Telegraf sends to output plugins.
  metric_batch_size = 1000

  ## For failed writes, telegraf will cache metric_buffer_limit metrics for each
  ## output, and will flush this buffer on a successful write. Oldest metrics
  ## are dropped first when this buffer fills.
  ## This buffer only fills when writes fail to output plugin(s).
  metric_buffer_limit = 10000

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "0s"

  ## Default flushing interval for all outputs. You shouldn't set this below
  ## interval. Maximum flush_interval will be flush_interval + flush_jitter
  flush_interval = "20s"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "0s"

  ## By default or when set to "0s", precision will be set to the same
  ## timestamp order as the collection interval, with the maximum being 1s.
  ##   ie, when interval = "10s", precision will be "1s"
  ##       when interval = "250ms", precision will be "1ms"
  ## Precision will NOT be used for service inputs. It is up to each individual
  ## service input to set the timestamp at the appropriate precision.
  ## Valid time units are "ns", "us" (or "Âµs"), "ms", "s".
  precision = ""

  ## Logging configuration:
  ## Run telegraf with debug log messages.
  debug = false
  ## Run telegraf in quiet mode (error log messages only).
  quiet = false
  ## Specify the log file name. The empty string means to log to stderr.
  logfile = ""

  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = true


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# Configuration for influxdb server to send metrics to
[[outputs.influxdb]]
  ## The full HTTP or UDP URL for your InfluxDB instance.
  ##
  ## Multiple urls can be specified as part of the same cluster,
  ## this means that only ONE of the urls will be written to each interval.
  # urls = ["udp://localhost:8089"] # UDP endpoint example
  urls = ["http://localhost:8086"] # required
  ## The target database for metrics (telegraf will create it if not exists).
  database = "telegraf" # required

  ## Name of existing retention policy to write to.  Empty string writes to
  ## the default retention policy.
  retention_policy = ""
  ## Write consistency (clusters only), can be: "any", "one", "quorum", "all"
  write_consistency = "any"

  ## Write timeout (for the InfluxDB client), formatted as a string.
  ## If not provided, will default to 5s. 0s means no timeout (not recommended).
  timeout = "5s"
  # username = "telegraf"
  # password = "metricsmetricsmetricsmetrics"
  ## Set the user agent for HTTP POSTs (can be useful for log differentiation)
  # user_agent = "telegraf"
  ## Set UDP payload size, defaults to InfluxDB UDP Client default (512 bytes)
  # udp_payload = 512

  ## Optional SSL Config
  # ssl_ca = "/etc/telegraf/ca.pem"
  # ssl_cert = "/etc/telegraf/cert.pem"
  # ssl_key = "/etc/telegraf/key.pem"
  ## Use SSL but skip chain & host verification
  # insecure_skip_verify = false

  ## HTTP Proxy Config
  # http_proxy = "http://corporate.proxy:3128"

  ## Optional HTTP headers
  # http_headers = {"X-Special-Header" = "Special-Value"}

  ## Compress each HTTP request payload using GZIP.
  # content_encoding = "gzip"


# # Send telegraf measurements to NATS
# [[outputs.nats]]
#   ## URLs of NATS servers
#   servers = ["nats://localhost:4222"]
#   ## Optional credentials
#   # username = ""
#   # password = ""
#   ## NATS subject for producer messages
#   subject = "telegraf"
#
#   ## Optional SSL Config
#   # ssl_ca = "/etc/telegraf/ca.pem"
#   # ssl_cert = "/etc/telegraf/cert.pem"
#   # ssl_key = "/etc/telegraf/key.pem"
#   ## Use SSL but skip chain & host verification
#   # insecure_skip_verify = false
#
#   ## Data format to output.
#   ## Each data format has its own unique set of configuration options, read
#   ## more about them here:
#   ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_OUTPUT.md
#   data_format = "influx"


###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

# # Retrieves SNMP values from remote agents
# [[inputs.snmp]]
#   agents = [ "127.0.0.1:161" ]
#   ## Timeout for each SNMP query.
#   timeout = "5s"
#   ## Number of retries to attempt within timeout.
#   retries = 3
#   ## SNMP version, values can be 1, 2, or 3
#   version = 2
#
#   ## SNMP community string.
#   community = "public"
#
#   ## The GETBULK max-repetitions parameter
#   max_repetitions = 10
#
#   ## SNMPv3 auth parameters
#   #sec_name = "myuser"
#   #auth_protocol = "md5"      # Values: "MD5", "SHA", ""
#   #auth_password = "pass"
#   #sec_level = "authNoPriv"   # Values: "noAuthNoPriv", "authNoPriv", "authPriv"
#   #context_name = ""
#   #priv_protocol = ""         # Values: "DES", "AES", ""
#   #priv_password = ""
#
#   ## measurement name
#   name = "system"
#   [[inputs.snmp.field]]
#     name = "hostname"
#     oid = ".1.0.0.1.1"
#   [[inputs.snmp.field]]
#     name = "uptime"
#     oid = ".1.0.0.1.2"
#   [[inputs.snmp.field]]
#     name = "load"
#     oid = ".1.0.0.1.3"
#   [[inputs.snmp.field]]
#     oid = "HOST-RESOURCES-MIB::hrMemorySize"
#
#   [[inputs.snmp.table]]
#     ## measurement name
#     name = "remote_servers"
#     inherit_tags = [ "hostname" ]
#     [[inputs.snmp.table.field]]
#       name = "server"
#       oid = ".1.0.0.0.1.0"
#       is_tag = true
#     [[inputs.snmp.table.field]]
#       name = "connections"
#       oid = ".1.0.0.0.1.1"
#     [[inputs.snmp.table.field]]
#       name = "latency"
#       oid = ".1.0.0.0.1.2"
#
#   [[inputs.snmp.table]]
#     ## auto populate table's fields using the MIB
#     oid = "HOST-RESOURCES-MIB::hrNetworkTable"

[[inputs.snmp]]
  agents = [ "PUT Cisco WLC IP address HERE" ]
  version = 2
  community = "public"

  name = "wlc-stats"
  [[inputs.snmp.field]]
    name = "hostname"
    oid = "RFC1213-MIB::sysName.0"
    is_tag = true

  [[inputs.snmp.field]]
    name = "wlc_uptime"
    oid = "DISMAN-EXPRESSION-MIB::sysUpTimeInstance"

  [[inputs.snmp.field]]
   name = "wlc_total_clients"
   oid = "CISCO-LWAPP-SYS-MIB::clsMaxClientsCount.0"

  [[inputs.snmp.field]]
   name = "wlc_aps"
   oid = "CISCO-LWAPP-SYS-MIB::clsSysApConnectCount.0"

  [[inputs.snmp.field]]
   name = "wlc_CPU_Usage"
   oid = "AIRESPACE-REF-MIB::airespace.1.1.5.1.0"

  [[inputs.snmp.field]]
   name = "wlc_free_RAM"
   oid = "AIRESPACE-REF-MIB::airespace.1.1.5.3.0"

  [[inputs.snmp.field]]
   name = "wlc_Model"
   oid = "AIRESPACE-REF-MIB::airespace.1.1.1.3.0"

  [[inputs.snmp.field]]
   name = "wlc_OS"
   oid = "AIRESPACE-REF-MIB::airespace.1.1.1.10.0"

  [[inputs.snmp.field]]
   name = "wlc_Product_Version"
   oid = "AIRESPACE-REF-MIB::airespace.1.1.1.14.0"


  [[inputs.snmp.table]]
    name = "bsnAPTable"
#    oid = "AIRESPACE-WIRELESS-MIB::bsnAPTable"
#    inherit_tags = [ "hostname" ]

    [[inputs.snmp.table.field]]
      name = "APName"
      oid = "AIRESPACE-WIRELESS-MIB::bsnAPName"
      is_tag = true

    [[inputs.snmp.table.field]]
      name = "APMAC"
      oid = "AIRESPACE-WIRELESS-MIB::bsnAPDot3MacAddress"

    [[inputs.snmp.table.field]]
      name = "APLocation"
      oid = "AIRESPACE-WIRELESS-MIB::bsnAPLocation"

    [[inputs.snmp.table.field]]
     oid = "AIRESPACE-WIRELESS-MIB:bsnApIfNoOfUsers"
     oid_index_suffix = ".0"
     name = "radio24Users"

    [[inputs.snmp.table.field]]
     oid = "AIRESPACE-WIRELESS-MIB:bsnAPIfLoadChannelUtilization"
     oid_index_suffix = ".0"
     name = "24GUtil"

    [[inputs.snmp.table.field]]
     oid = "AIRESPACE-WIRELESS-MIB:bsnAPIfPhyChannelNumber"
     oid_index_suffix = ".0"
     name = "radio24Channel"

    [[inputs.snmp.table.field]]
     oid = "AIRESPACE-WIRELESS-MIB:bsnAPIfPoorSNRClients"
     oid_index_suffix = ".0"
     name = "radio24PoorSNRClients"

    [[inputs.snmp.table.field]]
     oid = "AIRESPACE-WIRELESS-MIB:bsnAPIfRecommendedChannelNumber"
     oid_index_suffix = ".0"
     name = "radio24ReccomdendedChannel"

    [[inputs.snmp.table.field]]
     oid = "AIRESPACE-WIRELESS-MIB:bsnAPIfRecommendedTxPowerLevel"
     oid_index_suffix = ".0"
     name = "radio24ReccomdendedTxPowerLevel"

    [[inputs.snmp.table.field]]
     oid = "AIRESPACE-WIRELESS-MIB:bsnAPIfPhyTxPowerLevel"
     oid_index_suffix = ".0"
     name = "radio24TxPowerLevel"

    [[inputs.snmp.table.field]]
     oid = "AIRESPACE-WIRELESS-MIB:bsnApIfNoOfUsers"
     oid_index_suffix = ".1"
     name = "radio5Users"

    [[inputs.snmp.table.field]]
     oid = "AIRESPACE-WIRELESS-MIB:bsnAPIfPhyChannelNumber"
     oid_index_suffix = ".1"
     name = "radio5Channel"

    [[inputs.snmp.table.field]]
     oid = "AIRESPACE-WIRELESS-MIB:bsnAPIfPoorSNRClients"
     oid_index_suffix = ".1"
     name = "radio5PoorSNRClients"

    [[inputs.snmp.table.field]]
     oid = "AIRESPACE-WIRELESS-MIB:bsnAPIfRecommendedChannelNumber"
     oid_index_suffix = ".1"
     name = "radio5ReccomdendedChannel"

    [[inputs.snmp.table.field]]
     oid = "AIRESPACE-WIRELESS-MIB:bsnAPIfRecommendedTxPowerLevel"
     oid_index_suffix = ".1"
     name = "radio5ReccomdendedTxPowerLevel"

    [[inputs.snmp.table.field]]
     oid = "AIRESPACE-WIRELESS-MIB:bsnAPIfPhyTxPowerLevel"
     oid_index_suffix = ".1"
     name = "radio5TxPowerLevel"

  [[inputs.snmp.table]]
    name = "bsnMobileStationTable"
#    oid = "AIRESPACE-WIRELESS-MIB::bsnMobileStationTable"
#    inherit_tags = [ "hostname" ]

    [[inputs.snmp.table.field]]
      name = "TCliMAC"
      oid = "AIRESPACE-WIRELESS-MIB::bsnMobileStationMacAddress"
      is_tag = true

    [[inputs.snmp.table.field]]
      name = "TCliSSID"
      oid = "AIRESPACE-WIRELESS-MIB::bsnMobileStationSsid"
      is_tag = true

    [[inputs.snmp.table.field]]
      name = "CliMAC"
      oid = "AIRESPACE-WIRELESS-MIB::bsnMobileStationMacAddress"

    [[inputs.snmp.table.field]]
      name = "CliSSID"
      oid = "AIRESPACE-WIRELESS-MIB::bsnMobileStationSsid"

    [[inputs.snmp.table.field]]
      name = "CliAPMAC"
      oid = "AIRESPACE-WIRELESS-MIB::bsnMobileStationAPMacAddr"

    [[inputs.snmp.table.field]]
      name = "CliBytesReceived"
      oid = "AIRESPACE-WIRELESS-MIB::bsnMobileStationBytesReceived"

    [[inputs.snmp.table.field]]
      name = "CliBytesSent"
      oid = "AIRESPACE-WIRELESS-MIB::bsnMobileStationBytesSent"

    [[inputs.snmp.table.field]]
      name = "CliIP"
      oid = "AIRESPACE-WIRELESS-MIB::bsnMobileStationIpAddress"

    [[inputs.snmp.table.field]]
      name = "CliUserName"
      oid = "AIRESPACE-WIRELESS-MIB::bsnMobileStationUserName"

    [[inputs.snmp.table.field]]
      name = "CliRSSI"
      oid = "AIRESPACE-WIRELESS-MIB::bsnMobileStationRSSI"

    [[inputs.snmp.table.field]]
      name = "CliVlanId"
      oid = "AIRESPACE-WIRELESS-MIB::bsnMobileStationVlanId"

  [[inputs.snmp.table]]
    name = "bsnDot11EssTable"
#    oid = "AIRESPACE-WIRELESS-MIB::bsnDot11EssTable"
#    inherit_tags = [ "hostname" ]

    [[inputs.snmp.table.field]]
      name = "SSID"
      oid = "AIRESPACE-WIRELESS-MIB::bsnDot11EssSsid"
      is_tag = true

    [[inputs.snmp.table.field]]
      oid = "AIRESPACE-WIRELESS-MIB::bsnDot11EssNumberOfMobileStations"

